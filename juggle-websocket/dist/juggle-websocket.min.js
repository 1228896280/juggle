!function(e){e.juggle||(e.juggle={});e.juggle.webSocketEventType=new function(){this.CONNECTED="connected",this.CLOSE="close",this.WSMESSAGE="wsmessage",this.getMessage=function(e){return this.WSMESSAGE+"_"+e}}}(window),function(e){e.juggle||(e.juggle={});e.juggle.webSocketConfig=new function(){this.WSOPCODE="wsOpCode"}}(window),function(window){window.juggle||(window.juggle={});var EventDispatcher=window.juggle.EventDispatcher,webSocketEventType=window.juggle.webSocketEventType,webSocketConfig=window.juggle.webSocketConfig,WebSocketClient=function(url){this.webSocket=null,this.isConnected=!1,this.url=url,this.connect=function(){this.webSocket=new WebSocket(this.url),this.onOpenListener(this,this.onOpen),this.onCloseListener(this,this.onClose),this.onErrorListener(this,this.onError),this.onMessageListener(this,this.onMessage)},this.onOpenListener=function(e,t){e.webSocket.onopen=function(n){t.call(e,n)}},this.onCloseListener=function(e,t){e.webSocket.onclose=function(n){t.call(e,n)}},this.onErrorListener=function(e,t){e.webSocket.onerror=function(n){t.call(e,n)}},this.onMessageListener=function(e,t){e.webSocket.onmessage=function(n){t.call(e,n)}},this.onOpen=function(e){this.isConnected=!0,this.dispatchEventWith(webSocketEventType.CONNECTED)},this.send=function(e){if(this.isConnected){var t=new Blob([JSON.stringify(e)]);this.webSocket.send(t)}else alert("未链接至websocket服务器")},this.onMessage=function(event){var data=eval("("+event.data+")");null!==data[webSocketConfig.WSOPCODE]&&void 0!==data[webSocketConfig.WSOPCODE]&&this.dispatchEventWith(webSocketEventType.getMessage(data[webSocketConfig.WSOPCODE]),!1,data)},this.onClose=function(e){this.isConnected=!1,this.dispatchEventWith(webSocketEventType.CLOSE)},this.onError=function(e){},this.close=function(){this.webSocket.close()},EventDispatcher.apply(this),this.connect()};window.juggle.WebSocketClient=WebSocketClient}(window);